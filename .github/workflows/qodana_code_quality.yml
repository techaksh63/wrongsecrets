name: Qodana + Build + Docker

on:
  push:
    branches-ignore:
      - master
  pull_request:

jobs:
  build_and_scan:
    name: Build, Scan, and Dockerize
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      checks: write
      packages: write  # needed for Docker image push

    steps:
      # -----------------------------
      # 1Ô∏è‚É£ Checkout source code
      # -----------------------------
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # -----------------------------
      # 2Ô∏è‚É£ Set up JDK 21 (Liberica/Temurin)
      # -----------------------------
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # -----------------------------
      # 3Ô∏è‚É£ Build with Maven
      # -----------------------------
      - name: Build Maven project
        run: mvn clean package -DskipTests

      # -----------------------------
      # 4Ô∏è‚É£ Run Qodana Static Analysis
      # -----------------------------
      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2024.3
        with:
          args: --apply-fixes
          pr-mode: true
          push-fixes: pull-request
          commit-message: "Qodana Auto-fix applied"
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

      # -----------------------------
      # 5Ô∏è‚É£ Set up Docker Buildx
      # -----------------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # -----------------------------
      # 6Ô∏è‚É£ Log in to Container Registry (optional)
      # -----------------------------
      # Use one of these depending on where you push the image
      # --- GitHub Container Registry (GHCR) ---
      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # --- Docker Hub (if you have secrets set) ---
      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # -----------------------------
      # 7Ô∏è‚É£ Get Maven Project Version
      # -----------------------------
      - name: Read project version from pom.xml
        id: project_version
        run: echo "version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT

      # -----------------------------
      # 8Ô∏è‚É£ Build Docker Image
      # -----------------------------
      - name: Build Docker image
        run: |
          echo "Building image for version: ${{ steps.project_version.outputs.version }}"
          docker build \
            --build-arg argBasedVersion=${{ steps.project_version.outputs.version }} \
            --build-arg argBasedPassword="default" \
            --build-arg spring_profile="dev" \
            -t wrongsecrets-app:${{ steps.project_version.outputs.version }} \
            -t wrongsecrets-app:latest .

      # -----------------------------
      # 9Ô∏è‚É£ (Optional) Push Docker Image
      # -----------------------------
      # Uncomment below to push to GitHub Container Registry (GHCR)
      # - name: Push Docker Image
      #   run: |
      #     IMAGE_ID=ghcr.io/${{ github.repository_owner }}/wrongsecrets-app
      #     VERSION=${{ steps.project_version.outputs.version }}
      #     echo "Pushing $IMAGE_ID:$VERSION and latest"
      #     docker tag wrongsecrets-app:latest $IMAGE_ID:$VERSION
      #     docker tag wrongsecrets-app:latest $IMAGE_ID:latest
      #     docker push $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:latest

      # -----------------------------
      # üîü Save Docker image as artifact (for testing)
      # -----------------------------
      - name: Save image as artifact
        run: docker save wrongsecrets-app:latest -o wrongsecrets-app.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: wrongsecrets-docker-image
          path: wrongsecrets-app.tar
