#-------------------------------------------------------------------------------#
#               Qodana analysis is configured by qodana.yaml file               #
#             https://www.jetbrains.com/help/qodana/qodana-yaml.html            #
#-------------------------------------------------------------------------------#
version: "1.0"

#------------------------------------------------------------------------------#
# PROJECT CONFIGURATION
#------------------------------------------------------------------------------#
projectJDK: "21"  # Ensures consistent runtime between CI, local, and IDE

linter: jetbrains/qodana-jvm-community:2024.3

# Apply safe fixes automatically (formatting, imports, redundant code)
fixesStrategy: apply

# Fail the pipeline if the number of critical issues exceeds this threshold
failThreshold: 5

# INSPECTION PROFILE â€“ strong and detailed code quality rules
profile:
  name: qodana.recommended
include:
  # Code Quality #
  - name: FieldCanBeFinal
  - name: LocalVariableCanBeFinal
  - name: UnusedDeclaration
  - name: UnusedAssignment
  - name: RedundantSemicolon
  - name: RedundantCast
  - name: UnnecessaryReturnStatement
  - name: PointlessBooleanExpression
  - name: ConstantConditions
  - name: NullabilityProblems
  - name: EqualsAndHashcode
  - name: MissingOverrideAnnotation
  - name: AccessToStaticFieldLockedOnInstance
  - name: ClassReferencesSubclass
  - name: StringOperationCanBeSimplified

  # Code Style #
  - name: MethodNameSameAsClassName
  - name: UnusedImport
  - name: RedundantThrowsDeclaration
  - name: SimplifiableIfStatement
  - name: SwitchStatementWithTooFewBranches
  - name: MagicNumber
  - name: MethodTooLong
  - name: OverlyComplexMethod
  - name: ClassTooDeepInInheritanceTree
  - name: ClassCoupling
  - name: PackageVisibleField

  # Performance #
  - name: BoxingBoxedValue
  - name: ForCanBeForeach
  - name: StringBufferReplaceableByStringBuilder
  - name: CollectionAddAllCanBeReplacedWithConstructor
  - name: SimplifyStreamApiCallChains

  # Security #
  - name: HardCodedPassword
  - name: SqlDialectInspection
  - name: SqlNoDataSourceInspection
  - name: JpaDataSourceORMInspection
  - name: LoggerInitializedWithForeignClass
  - name: CommandLineArgumentInspection
  - name: UntrustedDeserialization
  - name: InsecureRandomUsage
  - name: FileSystemAccessInspection
  - name: PotentiallyInsecureTempFileCreation
  - name: PathTraversalInspection

  # Test Quality #
  - name: TestMethodWithoutAssertion
  - name: JUnit3StyleTestMethodInJUnit4Class
  - name: TestCaseWithConstructor
  - name: ExpectedExceptionNeverThrown
  - name: UnusedTestMethod

exclude:
  # Example: exclude generated sources, test data, or build artifacts
  - name: ALL
    paths:
      - target/**
      - node_modules/**
      - out/**
      - .idea/**
      - .qodana/**
      - "**/generated/**"

# BOOTSTRAP â€“ pre-commands before analysis
bootstrap: |
  echo "ðŸ”§ Running project preparation..."
  mvn -B clean compile test-compile
